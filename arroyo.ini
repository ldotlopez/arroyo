;
; Main section
;

[main]
; sqlalchemy URI for database
; See http://docs.sqlalchemy.org/en/rel_0_9/core/engines.html#database-urls
db-uri = sqlite:////tmp/arroyo.db
; Downloader backend to use
; Check arroyo/downloaders folder for available downloaders
downloader = mock

;
; Plugins
;

; Plugin example configuration
; [plugin.name]
; enabled = true
; parameter1 = value1

; Enable mediainfo plugin
[plugin.mediainfo]
enabled = true

[plugin.twitter]
enabled = true
notify_on = source-state-change=sharing, source-state-change=archived, origin-failed
consumer_key = 
consumer_secret = 
token = 
token_secret = 

;
; Origins
;

; An origin populates the dabatase with torrents
; [origin.label]
; ; Check arroyo/importers folder for available analizers
; analizer_name = foo
; ; URL to analize
; seed_url = http://
; ; Iterations: some analizers can iterate over the given seed_url.
; ; Think about iterations as how many 'pages' the analizer has to parser
; iterations = 1
; ; Type and language of media found in this origin.
; ; type can be something like episode or movie
; ; language should be a code like en-us or es-es
; ; Some analizers can resolve this for themselves
; type =
; language =

[origin.eztv]
analyzer_name = eztv
iterations = 3
type = episode
language = english

;
; Queries
;

; Queries are the way to download sources.
; Using a query you are filtering sources from the database
; and pushing them into downloader.
; See query --help
; [query.label]
; ; Query is a set of one or more filters. There are some examples:
; ; Most filters have "modifiers" like:
; ; "_like": case-insensitive filter using wildcards (*, .)
; ; "_regexp": Use a regular expression
; ; "_in": Comma-separated list of possible values
; ; "_min" and "_max": Used with integer values, the usual suffixes like
; ;                    [KkMmGg] are valid.
; name_like = *foo*
; name_regex = .+720.+
; min_size = 100M
; series = Lost
; series_in = Lost, Breaking Bad
[query.TV Shows @ 720p]
type = episode
name_regexp = .+720p.+
